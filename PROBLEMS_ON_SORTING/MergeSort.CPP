#include <bits/stdc++.h>
using namespace std;

void merge(vector<int> &nums, int low, int mid, int high) {
    vector<int> temp;
    int left = low;
    int right = mid + 1;

    while (left <= mid && right <= high) {
        if (nums[left] < nums[right]) {
            temp.push_back(nums[left]);
            left++;
        } else {
            temp.push_back(nums[right]);
            right++;
        }
    }

    while (left <= mid) {
        temp.push_back(nums[left]);
        left++;
    }
    while (right <= high) {
        temp.push_back(nums[right]);
        right++;
    }

    for (int i = low; i <= high; i++) {
        nums[i] = temp[i - low];
    }
}

void mS(vector<int> &nums, int low, int high) {
    if (low >= high) return;
    int mid = (low + high) / 2;
    mS(nums, low, mid);
    mS(nums, mid + 1, high);
    merge(nums, low, mid, high); 
}

void mergeSort(vector<int> &nums, int low, int high) {
    mS(nums, low, high);
}

int main() {
    vector<int> nums = {3, 5, 1, 0, 2, 9, 7, 4};
    mergeSort(nums, 0, nums.size() - 1);

    for (int n : nums) cout << n << " ";
    cout << endl;
}
